<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="../db_binner.png" type="Manipulator">
	<name>Database Auto-Binner</name>
	
	<shortDescription>
		This node allows to group numeric data in intervals - called bins.
	</shortDescription>
	
		<fullDescription>
		<intro>
			This node allows to group numeric data in intervals - called bins.
			Please use the "Database Numeric-Binner" node if you want to define custom bins.
		</intro>
		<tab name="Auto Binner Settings">
			<option name="Column Selection: ">
				Columns in the include list are processed
				separately. The columns in the
				exclude list are omitted by the node.
				<br/>
				<b>Please note, that if the underlaying database does not support "CASE" statements,
				only one column will be selectable.</b>
			</option>
			<option name="Number of bins">The number of bins to create</option>
			<option name="Bin Naming:">
				Use
				<b>Numbered</b>
				for bins labeled by an integer with prefix "Bin",
				<b>Borders</b>
				for labels using '"(a,b]"' interval notation or
				<b>Midpoints</b>
				for labels that show the midpoint of the interval.
			</option>
			<option name="Force integer bounds">
				Forces the bounds of the interval to be integers.
				The decimal bounds
				will be converted so that the lower bound of the
				first interval will
				be the floor of the lowest value and the upper
				bound of the last
				interval will be the ceiling of the highest value.
				The edges that
				separate the intervals will be the ceiling of the
				decimal edges.
				Duplicates of edges will be removed.
				<br />
				<br />
				Examples:
				<br />
				[0.1,0.9], (0.9,1.8] -> [0,1], (1,2]
				<br />
				[3.9,4.1], (4.1,4.9], (4.9,5.1] -> [3,5], (5,6]
			</option>
			<option name="Replace target column(s):">
				If set the columns in the include list are
				replaced by the binned
				columns
				otherwise columns named with suffix
				'[binned]' are appended.
			</option>
		</tab>
		<tab name="Number Format Settings">
			<option name="Advanced formatting">
				If enabled the format of the doubles in the labels
				can be configured by
				the options in this tab.
			</option>
			<option name="Output format">
				Specify the output format. The number 0.00000035239 will be displayed
				as 3.52E-7 with
				<b>Standard String</b>
				, 0.000000352 with
				<b>Plain String (no exponent)</b>
				and 352E-9 with
				<b>Engineering String</b>
				.
			</option>
			<option name="Precision">
				The scale of the double values to round to. If the
				scale is reduced
				the specified rounding mode is applied.
			</option>
			<option name="Precision mode">
				The type of precision to which the values are
				rounded. Decimal
				places, the default option rounds to the specified
				decimal places,
				whereas significant figures rounds to significant
				figures or
				numbers.
			</option>
			<option name="Rounding mode">
				The rounding mode which is applied when double values are rounded.
				The rounding mode specifies the rounding behavior. Seven different
				rounding modes are available:
				<br />
				<ul>
					<li>UP: Rounding mode to round away from zero.</li>
					<li>DOWN: Rounding mode to round towards zero.</li>
					<li>CEILING: Rounding mode to round towards positive infinity.</li>
					<li>FLOOR: Rounding mode to round towards negative infinity.</li>
					<li>HALF_UP: Rounding mode to round towards "nearest neighbor"
						unless both neighbors are equidistant, in which case round up.
					</li>
					<li>HALF_DOWN: Rounding mode to round towards "nearest neighbor"
						unless both neighbors are equidistant, in which case round down.
					</li>
					<li>HALF_EVEN: Rounding mode to round towards the "nearest neighbor"
						unless both neighbors are equidistant, in which case, round towards
						the even neighbor.
					</li>
				</ul>
				For a detailed description of each rounding mode please see the
				<a
					href="http://docs.oracle.com/javase/6/docs/api/index.html?java/math/RoundingMode.html">Java documentation</a>
				.
			</option>
		</tab>
	</fullDescription>
	
	<ports>
		<inPort index="0" name="Input Data">Data to define bins</inPort>
		<outPort index="0" name="Binned Data">Data with bins defined</outPort>
	    <outPort index="1" name="PMML Model">PMML document containing binning parameters.</outPort>
	</ports>	
</knimeNode>