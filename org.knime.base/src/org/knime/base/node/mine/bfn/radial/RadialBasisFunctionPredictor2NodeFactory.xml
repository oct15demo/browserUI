<?xml version="1.0" encoding="utf-8"?>
<knimeNode type="Predictor" icon="./rbf_predictor.png" xmlns="http://knime.org/node/v2.8"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v2.8 http://knime.org/node/v2.8.xsd">
	<name>PNN Predictor</name>
	
    <shortDescription>
	    Applies a PNN Model to numeric data and outputs a classification.
	</shortDescription>
	
	<fullDescription>
		<intro>		
	    The first port contains the PNN Model that is applied to the test data contained in the second input port.
	    The output data has then one additional column containing the predicted class attribute
	    which is the best match for all rules.
		</intro>
		
	    <option name="Don't Know Class">
		    <b>Ignore</b> If selected, no lower degree of class activation 
		    is set, otherwise the specified value between 0 and 1 is used.<br />
		    <b>Default</b> Use the minimum activation threshold from the
		    learning algorithm.<br />
		    <b>Use</b> Instances where the activation lies 
		    above this threshold are classified as a missing (unknown) class. 
		    This is useful in cases where the feature space is not completely 
		    covered by rules.
	    </option>
		<option name="Change prediction column name">
			When set, you can change the name of the prediction column.
		</option>
		<option name="Prediction Column">
			The possibly overridden column name for the predicted column. (The
			default is:
			<tt>Prediction (</tt>trainingColumn<tt>)</tt>.)
		</option>
		<option name="Append columns with normalized class distribution">
			Compute the probabilities for the different classes.
		</option>
		<option name="Suffix for probability columns">
			Suffix for the normalized distribution columns. Their names are like:
			<tt>P (</tt>trainingColumn<tt>=</tt>value<tt>)</tt>.
		</option>
	</fullDescription>

	<ports>
		<inPort index="0" name="PNN Model">
			PNN Model to which test data is applied.
		</inPort>
		<inPort index="1" name="Test Data">
			Test data matching the PNN Model structure.
		</inPort>
    	<outPort index="0" name="Predicted Data">
    		Predicted data with one additional classification column.
    	</outPort>
	</ports>
	
</knimeNode>
