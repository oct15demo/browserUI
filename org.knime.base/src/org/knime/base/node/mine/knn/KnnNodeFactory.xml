<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode type="Learner" icon="./knn.png">
	<name>K Nearest Neighbor</name>
	<shortDescription>
		 Classifies a set of test data based on the k Nearest Neighbor algorithm
		 using the training data.
	</shortDescription>
	
	<fullDescription>
		<intro>		
		 Classifies a set of test data based on the k Nearest Neighbor algorithm
		 using the training data. The underlying algorithm uses a KD tree and
		 should therefore exhibit reasonable performance. However, this type
		 of classifier is still only suited for a few thousand to ten
		 thousand or so training instances. All (and only) numeric columns
		 and the Euclidean distance are used in this implementation. All
		 other columns (of non-numeric type) in the test data are being
		 forwarded as-is to the output.
		</intro>
		
		<option name="Column with class labels">
			Select column to be used as classification attribute.
		</option>
		<option name="Number of neighbours to consider (k)">
			Select the number of nearest neighbors used to classify a new
			instance. An odd number is recommended to avoid ties.
		</option>
        <option name="Weight neighbours by distance">
            Includes the distance of the query pattern to the stored training
            patterns into the classification. Closer neighbors have greater
            influence on the resulting class than the ones further away.
            (Still only k neighbors will be considered, however!)
        </option>
        <option name="Output class probabilities">
            If this option in enabled, additional columns, containing the
            class probabilities, will be appended to the output table.
        </option>
	</fullDescription>
	
	<ports>
		<inPort index="0" name="Training Data">Input port for the training data</inPort>
		<inPort index="1" name="Test Data">Input port for the test data</inPort>
		<outPort index="0" name="Classified Data">Output data with class labels</outPort>
	</ports>
</knimeNode>